# -*- coding: utf-8 -*-
"""DP-10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OvEd1N1lydNpBdLZu8ihiKGWyocD8Ad1
"""

def knapsack(wt,val,W,n):

  for i in range(0,n+1):
    for j in range(0,W+1):
      if ((i ==0) or (j==0)):
        t[i][j]=0

  for i in range(1,n+1):
    for j in range(1, W+1):
      if wt[i-1] <=j:
        t[i][j] = max(
            (val[i-1] + t[i-1][j-wt[i-1]]),
                  t[i-1][j])
        
    
      else:
        t[i][j] = t[i-1][j]

  return t[n][W]


    

val = [60,100,120]
wt = [10,20,30]
W = 50

n = len(wt)
t = [[-1]*(W+1) for _ in range(n+1)]
print(t)

print(knapsack(wt,val,W,n))
print(t)